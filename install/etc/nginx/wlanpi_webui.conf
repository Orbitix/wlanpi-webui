map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
}

upstream grafana {
    server 127.0.0.1:3000;
}

upstream webui {
    server unix:/run/wlanpi_webui.sock fail_timeout=2s;
}

server {
    listen 443 ssl http2;
    server_name _;
    ssl_certificate         /etc/nginx/ssl/self-signed-wlanpi.cert;
    ssl_certificate_key     /etc/nginx/ssl/self-signed-wlanpi.key;
    ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:!DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA';
    ssl_protocols TLSv1.2;
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;
    add_header Strict-Transport-Security max-age=15768000;

    access_log /var/log/webui_access.log;
    error_log /var/log/webui_error.log;

    location = /favicon.ico { 
        access_log off; 
        log_not_found off; 
    }
    
    keepalive_timeout 5;

    location / {
        try_files $uri @proxy_to_webui;
    }

    location @proxy_to_webui {  
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Host $http_host;
        # we don't want nginx trying to do something clever with
        # redirects, we set the Host: header above already.
        proxy_redirect off;
        proxy_pass https://webui;
    }

    location /app/librespeed/ {
        proxy_pass https://127.0.0.1:4433/;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /app/grafana/ {
        proxy_set_header Host $http_host;
        proxy_pass https://grafana;
        add_header X-Frame-Options "SAMEORIGIN";
    }

    location /app/grafana/api/live/ {
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        proxy_set_header Host $http_host;
        proxy_pass https://grafana;
    }
    
    location /app/cockpit/ {
        proxy_pass https://127.0.0.1:9090;
        proxy_http_version 1.1;
        proxy_buffering off;
        proxy_set_header X-Real-IP  $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $remote_addr;
        
        # needed for websocket
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;

        # change scheme of "Origin" to http
        proxy_set_header Origin https://$host;

        gzip off;
        add_header X-Frame-Options "SAMEORIGIN";
    }
}

server {
    listen 80;
    server_name _;
    return 301 https://$host$request_uri;
}
