#!/bin/bash
# postinst script
#
# see: dh_installdeb(1)

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

# function to check if a path is a symlink
function isValidSymlink() {
    if [ -L "$1" ]; then
        return 0
    else
        return 1
    fi
}

CONF_CHANGED=1

# if conf is not a symlink, and exists as a file, create backup.
NGINX_CONF=/etc/nginx/nginx.conf
if ! isValidSymlink $NGINX_CONF; then
    if [ -f "$NGINX_CONF" ]; then
        TSTAMP=`date '+%s'`
        NEW_CONF="$NGINX_CONF.$TSTAMP"
        echo "Existing nginx.conf detected; moving to $NEW_CONF..."
        mv $NGINX_CONF $NEW_CONF
    fi
    echo "Linking our nginx.conf config..."
    ln -s /etc/wlanpi-webui/nginx/nginx.conf $NGINX_CONF
    CONF_CHANGED=0
fi

# if default site is enabled, disable it.
DEFAULT_FILE=/etc/nginx/sites-enabled/default
if isValidSymlink $DEFAULT_FILE; then
    echo "Unlinking $DEFAULT_FILE"
    unlink $DEFAULT_FILE
fi

# if wlanpi_speedtest.conf is not a symlink, create symlink.
WLANPI_SPEEDTEST=/etc/nginx/sites-enabled/wlanpi_speedtest.conf
if ! isValidSymlink $WLANPI_SPEEDTEST; then
    echo "Linking wlanpi_speedtest.conf..."
    ln -s /etc/wlanpi-webui/nginx/sites-enabled/wlanpi_speedtest.conf $WLANPI_SPEEDTEST
    CONF_CHANGED=0
fi

# if wlanpi_webui.conf is not a symlink, create symlink.
WLANPI_WEBUI=/etc/nginx/sites-enabled/wlanpi_webui.conf
if ! isValidSymlink $WLANPI_WEBUI; then
    echo "Linking wlanpi_webui.conf..."
    ln -s /etc/wlanpi-webui/nginx/sites-enabled/wlanpi_webui.conf $WLANPI_WEBUI
    CONF_CHANGED=0
fi

# if we changed a nginx config file, test config, and restart nginx.
if [ $CONF_CHANGED -eq 0 ]; then
    nginx -t
    systemctl restart nginx.service
fi

# fix up permissions
chown -R www-data:www-data /var/www/speedtest

exit 0
